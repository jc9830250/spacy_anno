steps:
  - uses: actions/checkout@v2
  # 查詢版本號（tag）
  - name: Query version number
    id: get_version
    shell: bash
    run: |
      echo "using version tag ${GITHUB_REF:10}"
      echo ::set-output name=version::"${GITHUB_REF:10}"

  # 根據查詢到的版本號創建 release
  - name: Create Release
    id: create_release
    uses: actions/create-release@v1
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    with:
      tag_name: '${{ steps.get_version.outputs.VERSION }}'
      release_name: 'app ${{ steps.get_version.outputs.VERSION }}'
      body: 'See the assets to download this version and install.'
runs-on: ${{ matrix.platform }}
steps:
  - uses: actions/checkout@v2

 # 安裝 Node.js
  - name: Setup node
    uses: actions/setup-node@v1
    with:
      node-version: 16

  # 安裝 Rust
  - name: Install Rust stable
    uses: actions-rs/toolchain@v1
    with:
      toolchain: stable

  # 使用 Rust 緩存，加快安裝速度
  - uses: Swatinem/rust-cache@v1

  - name: install dependencies (ubuntu only)
    if: matrix.platform == 'ubuntu-latest'
    run: |
      sudo apt-get update
      sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

  # 可選，如果需要將 Rust 編譯為 wasm，則安裝 wasm-pack
  - uses: jetli/wasm-pack-action@v0.3.0
    with:
      # Optional version of wasm-pack to install(eg. 'v0.9.1', 'latest')
      version: v0.9.1

  # 可選，如果需要使用 rsw 構建 wasm，則安裝 rsw
  - name: Install rsw
    run: cargo install rsw

  # 獲取 yarn 緩存路徑
  - name: Get yarn cache directory path
    id: yarn-cache-dir-path
    run: echo "::set-output name=dir::$(yarn config get cacheFolder)"

  # 使用 yarn 緩存
  - name: Yarn cache
    uses: actions/cache@v2
    id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
    with:
      path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      restore-keys: |
        ${{ runner.os }}-yarn-

  # 安裝依賴執行構建，以及推送 github release
  - name: Install app dependencies and build it
    run: yarn && yarn build
  - uses: tauri-apps/tauri-action@v0
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    with:
      releaseId: ${{ needs.create-release.outputs.RELEASE_UPLOAD_ID }}
